name: Build and Deploy CLI Application

on:
  push:
    tags:
      - v*.*.*

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Build
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          GOOS=windows GOARCH=amd64 go build -o xctl-$VERSION-windows-amd64
          GOOS=linux GOARCH=amd64 go build -o xctl-$VERSION-linux-amd64
          GOOS=darwin GOARCH=amd64 go build -o xctl-$VERSION-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -o xctl-$VERSION-darwin-ard64
          tar -zcvf xctl-$VERSION-windows-amd64.tar.gz ./template ./xctl-$VERSION-windows-amd64
          tar -zcvf xctl-$VERSION-linux-amd64.tar.gz ./template ./xctl-$VERSION-linux-amd64
          tar -zcvf xctl-$VERSION-darwin-amd64.tar.gz ./template ./xctl-$VERSION-darwin-amd64
          tar -zcvf xctl-$VERSION-darwin-arm64.tar.gz ./template ./xctl-$VERSION-darwin-ard64

      - name: Upload asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: |
            xctl-${{ steps.get_version.outputs.VERSION }}-windows-amd64.tar.gz
            xctl-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz
            xctl-${{ steps.get_version.outputs.VERSION }}-darwin-amd64.tar.gz
            xctl-${{ steps.get_version.outputs.VERSION }}-darwin-arm64.tar.gz
